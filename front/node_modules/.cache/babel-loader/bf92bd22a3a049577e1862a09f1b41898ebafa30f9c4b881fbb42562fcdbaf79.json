{"ast":null,"code":"var _jsxFileName = \"/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './modal/QuizlyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [pass, setPass] = useState(null);\n  const [count, setCount] = useState(null);\n\n  // 퀴즈 한 개 받아오기\n  const fetchQuiz = async () => {\n    setPass(null);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:9090/api/quiz/random'); // 실제 API 주소로 변경\n      console.log(response);\n      setQuiz(response.data);\n    } catch (err) {\n      setError('퀴즈를 불러오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const postAnswer = async (id, answer) => {\n    try {\n      const response = await axios.post('http://localhost:9090/api/quiz/compareAnswer', {\n        id: id,\n        answer: answer // 보내고 싶은 데이터\n      });\n      const result = response.data;\n      setPass(result);\n\n      // 여기서 결과에 따라 처리\n      if (result > 0) {\n        setCount(count + 1);\n        setTimeout(() => {\n          fetchQuiz(); // 다음 퀴즈 불러오기\n          setAnswer('');\n          setPass(null);\n        }, 1000); // 1초 후 다음 문제로 넘어가기\n      } else {}\n    } catch (error) {\n      console.error('에러 발생:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n  const handleAnswer = answer => {\n    postAnswer(quiz.id, answer);\n    //fetchQuiz();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }, this);\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uD034\\uC988\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: quiz.hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"answer\",\n      value: answer,\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          handleAnswer(answer);\n        }\n      },\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(answer),\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"+NnnF208EaQ0T0v0dW4ylETwIqo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Quiz","_s","quiz","setQuiz","loading","setLoading","error","setError","answer","setAnswer","pass","setPass","count","setCount","fetchQuiz","response","get","console","log","data","err","postAnswer","id","post","result","setTimeout","handleAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","question","hint","type","value","onKeyDown","e","key","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './modal/QuizlyModal';\n\nfunction Quiz() {\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [pass, setPass] = useState(null);\n  const [count, setCount] = useState(null);\n\n  // 퀴즈 한 개 받아오기\n  const fetchQuiz = async () => {\n    setPass(null);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:9090/api/quiz/random'); // 실제 API 주소로 변경\n      console.log(response);\n      setQuiz(response.data);\n    } catch (err) {\n      setError('퀴즈를 불러오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const postAnswer = async (id, answer) =>{\n     try {\n      const response = await axios.post('http://localhost:9090/api/quiz/compareAnswer', {\n        id: id,\n        answer: answer, // 보내고 싶은 데이터\n      });\n      \n      const result = response.data;\n      setPass(result);\n\n        // 여기서 결과에 따라 처리\n      if (result > 0) {\n          setCount(count+1);\n          setTimeout(() => {\n            fetchQuiz(); // 다음 퀴즈 불러오기\n            setAnswer('');\n            setPass(null);\n          }, 1000); // 1초 후 다음 문제로 넘어가기\n      } else {\n\n\n      }\n      } catch (error) {\n      console.error('에러 발생:', error);\n    }\n  }\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n \n  const handleAnswer = (answer) => {\n    postAnswer(quiz.id, answer);\n    //fetchQuiz();\n  };\n\n\n  if (loading) return <p>로딩중...</p>;\n  if (error) return <p>{error}</p>;\n  if (!quiz) return <p>퀴즈가 없습니다.</p>;\n\n  return (\n    <div>\n      <h3>{quiz.question}</h3>\n      <h5>{quiz.hint}</h5>\n       <input\n        type=\"text\"\n        id=\"answer\"\n        value={answer}                 \n         onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            handleAnswer(answer);\n          }\n        }}\n        onChange={(e) => setAnswer(e.target.value)} \n      />\n      <button onClick={() => handleAnswer(answer)}>제출</button>\n\n      <Modal>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}