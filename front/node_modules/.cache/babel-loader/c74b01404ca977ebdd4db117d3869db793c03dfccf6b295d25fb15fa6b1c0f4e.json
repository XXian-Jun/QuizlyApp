{"ast":null,"code":"var _jsxFileName = \"/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [pass, setPass] = useState(null);\n  const [count, setCount] = useState(null);\n  const navigate = useNavigate(); // 페이지 이동용\n\n  // 퀴즈 한 개 받아오기\n  const fetchQuiz = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:9090/api/quiz/random'); // 실제 API 주소로 변경\n      console.log(response);\n      setQuiz(response.data);\n    } catch (err) {\n      setError('퀴즈를 불러오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const postAnswer = async (id, answer) => {\n    try {\n      const response = await axios.post('http://localhost:9090/api/quiz/compareAnswer', {\n        id: id,\n        answer: answer // 보내고 싶은 데이터\n      });\n      const result = response.data;\n      setPass(result);\n\n      // 여기서 결과에 따라 처리\n      if (result > 0) {\n        setCount(count + 1);\n        setTimeout(() => {\n          fetchQuiz(); // 다음 퀴즈 불러오기\n          setAnswer('');\n          setPass(null);\n        }, 1000); // 1초 후 다음 문제로 넘어가기\n      } else {\n        navigate('/register', {\n          state: {\n            quizId: id,\n            userAnswer: answer,\n            score: count\n          }\n        });\n      }\n    } catch (error) {\n      console.error('에러 발생:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n  const handleAnswer = answer => {\n    postAnswer(quiz.id, answer);\n    //fetchQuiz();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 21\n  }, this);\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uD034\\uC988\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: quiz.hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"answer\",\n      value: answer,\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          handleAnswer(answer);\n        }\n      },\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(answer),\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"juS8PLygGvBgH7JU569tEeOthWI=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Quiz","_s","quiz","setQuiz","loading","setLoading","error","setError","answer","setAnswer","pass","setPass","count","setCount","navigate","fetchQuiz","response","get","console","log","data","err","postAnswer","id","post","result","setTimeout","state","quizId","userAnswer","score","handleAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","question","hint","type","value","onKeyDown","e","key","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // 추가\n\nfunction Quiz() {\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [pass, setPass] = useState(null);\n  const [count, setCount] = useState(null);\n\n  const navigate = useNavigate(); // 페이지 이동용\n\n  // 퀴즈 한 개 받아오기\n  const fetchQuiz = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:9090/api/quiz/random'); // 실제 API 주소로 변경\n      console.log(response);\n      setQuiz(response.data);\n    } catch (err) {\n      setError('퀴즈를 불러오는 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const postAnswer = async (id, answer) => {\n    try {\n      const response = await axios.post('http://localhost:9090/api/quiz/compareAnswer', {\n        id: id,\n        answer: answer, // 보내고 싶은 데이터\n      });\n\n      const result = response.data;\n      setPass(result);\n\n      // 여기서 결과에 따라 처리\n      if (result > 0) {\n        setCount(count + 1);\n        setTimeout(() => {\n          fetchQuiz(); // 다음 퀴즈 불러오기\n          setAnswer('');\n          setPass(null);\n        }, 1000); // 1초 후 다음 문제로 넘어가기\n      } else {\n\n        navigate('/register', {\n          state: {\n            quizId: id,\n            userAnswer: answer,\n            score: count,\n          },\n        });\n\n      }\n    } catch (error) {\n      console.error('에러 발생:', error);\n    }\n  }\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n\n  const handleAnswer = (answer) => {\n    postAnswer(quiz.id, answer);\n    //fetchQuiz();\n  };\n\n\n  if (loading) return <p>로딩중...</p>;\n  if (error) return <p>{error}</p>;\n  if (!quiz) return <p>퀴즈가 없습니다.</p>;\n\n  return (\n    <div>\n      <h3>{quiz.question}</h3>\n      <h5>{quiz.hint}</h5>\n      <input\n        type=\"text\"\n        id=\"answer\"\n        value={answer}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            handleAnswer(answer);\n          }\n        }}\n        onChange={(e) => setAnswer(e.target.value)}\n      />\n      <button onClick={() => handleAnswer(answer)}>제출</button>\n\n    </div>\n  );\n}\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BV,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,uCAAuC,CAAC,CAAC,CAAC;MAC3EC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBb,OAAO,CAACa,QAAQ,CAACI,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZd,QAAQ,CAAC,wBAAwB,CAAC;IACpC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiB,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEf,MAAM,KAAK;IACvC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,8CAA8C,EAAE;QAChFD,EAAE,EAAEA,EAAE;QACNf,MAAM,EAAEA,MAAM,CAAE;MAClB,CAAC,CAAC;MAEF,MAAMiB,MAAM,GAAGT,QAAQ,CAACI,IAAI;MAC5BT,OAAO,CAACc,MAAM,CAAC;;MAEf;MACA,IAAIA,MAAM,GAAG,CAAC,EAAE;QACdZ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACnBc,UAAU,CAAC,MAAM;UACfX,SAAS,CAAC,CAAC,CAAC,CAAC;UACbN,SAAS,CAAC,EAAE,CAAC;UACbE,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,MAAM;QAELG,QAAQ,CAAC,WAAW,EAAE;UACpBa,KAAK,EAAE;YACLC,MAAM,EAAEL,EAAE;YACVM,UAAU,EAAErB,MAAM;YAClBsB,KAAK,EAAElB;UACT;QACF,CAAC,CAAC;MAEJ;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdoB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMgB,YAAY,GAAIvB,MAAM,IAAK;IAC/Bc,UAAU,CAACpB,IAAI,CAACqB,EAAE,EAAEf,MAAM,CAAC;IAC3B;EACF,CAAC;EAGD,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAiC,QAAA,EAAG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACjC,IAAI9B,KAAK,EAAE,oBAAOP,OAAA;IAAAiC,QAAA,EAAI1B;EAAK;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAI,CAAClC,IAAI,EAAE,oBAAOH,OAAA;IAAAiC,QAAA,EAAG;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAElC,oBACErC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAK9B,IAAI,CAACmC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBrC,OAAA;MAAAiC,QAAA,EAAK9B,IAAI,CAACoC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBrC,OAAA;MACEwC,IAAI,EAAC,MAAM;MACXhB,EAAE,EAAC,QAAQ;MACXiB,KAAK,EAAEhC,MAAO;MACdiC,SAAS,EAAGC,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;UACrBZ,YAAY,CAACvB,MAAM,CAAC;QACtB;MACF,CAAE;MACFoC,QAAQ,EAAGF,CAAC,IAAKjC,SAAS,CAACiC,CAAC,CAACG,MAAM,CAACL,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrC,OAAA;MAAQ+C,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACvB,MAAM,CAAE;MAAAwB,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErD,CAAC;AAEV;AAACnC,EAAA,CA7FQD,IAAI;EAAA,QAQMH,WAAW;AAAA;AAAAkD,EAAA,GARrB/C,IAAI;AA+Fb,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}