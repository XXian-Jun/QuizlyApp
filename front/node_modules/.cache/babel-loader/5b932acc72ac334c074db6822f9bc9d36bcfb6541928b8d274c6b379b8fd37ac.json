{"ast":null,"code":"var _jsxFileName = \"/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/Quizregister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [userInforArray, setUserInforArray] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    quizId,\n    userAnswer,\n    score,\n    correct\n  } = location.state || {};\n  const [nickname, setNickname] = useState('');\n  const handleSubmit = async () => {\n    if (nickname === \"\") {\n      alert(\"닉네임을 입력해주세요\");\n      return false;\n    }\n    const newArray = correct.map(item => ({\n      id: item.id,\n      userNm: nickname\n    }));\n    const enrichedArray = newArray.map(userInfo => {\n      return {\n        id: userInfo.id,\n        userNm: userInfo.userNm\n      };\n    });\n    const response = await axios.post('http://localhost:9090/api/quiz/insert-info', enrichedArray);\n\n    // 등록 후 결과 페이지나 홈으로 이동\n    navigate('/Quizregister', {\n      state: {\n        nickname,\n        score\n      }\n    });\n  };\n  if (!quizId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uC798\\uBABB\\uB41C \\uC811\\uADFC\\uC785\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"register-title\",\n      children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uACE0 \\uB7AD\\uD0B9\\uC5D0 \\uB4F1\\uB85D\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"register-score\",\n      children: [\"\\uCD1D \\uB9DE\\uCD98 \\uAC1C\\uC218: \", score, \"\\uAC1C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"register-input\",\n      type: \"text\",\n      value: nickname,\n      onChange: e => setNickname(e.target.value),\n      placeholder: \"\\uB2C9\\uB124\\uC784 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"register-button\",\n      onClick: handleSubmit,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"bAomriLDi18ov6CNMr5I+BcDyMc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","userInforArray","setUserInforArray","navigate","location","quizId","userAnswer","score","correct","state","nickname","setNickname","handleSubmit","alert","newArray","map","item","id","userNm","enrichedArray","userInfo","response","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/gimhyeonjun/project/Quizly/quiz-frontend/src/Quizregister.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction RegisterPage() {\n    const [userInforArray, setUserInforArray] = useState([]);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { quizId, userAnswer, score, correct } = location.state || {};\n\n    const [nickname, setNickname] = useState('');\n\n    const handleSubmit = async () => {\n\n        if (nickname === \"\") {\n            alert(\"닉네임을 입력해주세요\");\n            return false;\n        }\n        const newArray = correct.map((item) => ({\n            id: item.id,\n            userNm: nickname,\n        }));\n\n        const enrichedArray = newArray.map(userInfo => {\n            return {\n                id: userInfo.id,\n                userNm: userInfo.userNm\n            };\n        });\n\n        const response = await axios.post('http://localhost:9090/api/quiz/insert-info', enrichedArray);\n\n        // 등록 후 결과 페이지나 홈으로 이동\n        navigate('/Quizregister', {\n            state: { nickname, score },\n        });\n    };\n\n    if (!quizId) return <p>잘못된 접근입니다.</p>;\n\n    return (\n        <div className=\"register-container\">\n            <h2 className=\"register-title\">닉네임을 입력하고 랭킹에 등록하세요</h2>\n            <h3 className=\"register-score\">총 맞춘 개수: {score}개</h3>\n            <input\n                className=\"register-input\"\n                type=\"text\"\n                value={nickname}\n                onChange={(e) => setNickname(e.target.value)}\n                placeholder=\"닉네임 입력\"\n            />\n            <br />\n            <button className=\"register-button\" onClick={handleSubmit}>\n                등록\n            </button>\n        </div>\n    );\n}\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}